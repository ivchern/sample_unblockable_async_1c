&НаКлиенте
 Асинх Функция Запустить(Команда)
	  Ждать ВыполнитьФункции();
КонецФункции

&НаКлиенте
Асинх Функция ВыполнитьФункции()
	//Лучше использовать массив c ЖДАТЬ, если ожидаете ошибки) 
	Функция1();
	Функция2(); 
	Функция3();
	Функция4();
	Функция5();	  
	ПроверитьЗаданияНаКлиенте();
КонецФункции 

&НаКлиенте
Асинх Функция Функция1() Экспорт 
	ЗаданиеВыгрузки =  ЗапускФоновогоЗадания("ТестАсинхронностьОМ.PauseComp", 2, "ОбратныйВызов1");
КонецФункции

 &НаКлиенте
Асинх Функция Функция2() Экспорт
	ПредупреждениеАсинх(2);
КонецФункции

&НаКлиенте
Асинх Функция Функция3() Экспорт 
	ЗаданиеВыгрузки =  ЗапускФоновогоЗадания("ТестАсинхронностьОМ.PauseComp", 1, "ОбратныйВызов3");
КонецФункции

&НаКлиенте
Асинх Функция Функция4() Экспорт 
	ЗаданиеВыгрузки =  ЗапускФоновогоЗадания("ТестАсинхронностьОМ.PauseComp", 5, "ОбратныйВызов4");
КонецФункции
                                         
&НаКлиенте
Асинх Функция Функция5() Экспорт 
	ЗаданиеВыгрузки =  ЗапускФоновогоЗадания("ТестАсинхронностьОМ.PauseComp", 1, "ОбратныйВызов5");
КонецФункции

&НаКлиенте 
Асинх Функция ОбратныйВызов1() Экспорт      
	ПредупреждениеАсинх("ОбратныйВызов1");
КонецФункции	   
&НаКлиенте 
Асинх  Функция ОбратныйВызов2() Экспорт      
	ПредупреждениеАсинх("ОбратныйВызов2");
КонецФункции	

&НаКлиенте 
Асинх Функция ОбратныйВызов3() Экспорт      
	ПредупреждениеАсинх("ОбратныйВызов3");
КонецФункции	

&НаКлиенте 
Асинх Функция ОбратныйВызов4() Экспорт      
	ПредупреждениеАсинх("ОбратныйВызов4");
КонецФункции	

&НаКлиенте 
Асинх Функция ОбратныйВызов5() Экспорт      
	ПредупреждениеАсинх("ОбратныйВызов5");
КонецФункции	

&НаСервере 
Функция ДобавитьПараллельноеЗадание(ИДЗадания); 

		ИнформацияЗадания = Новый Структура;; 
		ИнформацияЗадания.Вставить("ИДЗадания", ИДЗадания); 
		ИнформацияЗадания.Вставить("Пользователь", ""); 

		Буфер = Новый Массив;  
		
		Для Каждого Элемент Из ПараметрыСеанса.ТестАсинхронность Цикл
			Буфер.Добавить(Элемент);
		КонецЦикла;
		
		Буфер.Добавить(Новый ФиксированнаяСтруктура(ИнформацияЗадания));		
		                                            
			ПараметрыСеанса.ТестАсинхронность =  Новый ФиксированныйМассив(Буфер);	               
КонецФункции

&НаСервере                         
Функция ЗапускФоновогоЗадания(НазваниеФункции, Пауза, ОбратныйВызов) 
	ПараметрыВызова = Новый Массив;                 
	ПараметрыВызова.Добавить(Пауза);                  
	ЗаданиеВыгрузки = ФоновыеЗадания.Выполнить(НазваниеФункции, 
												ПараметрыВызова, Новый УникальныйИдентификатор(),
												ОбратныйВызов);
	ДобавитьПараллельноеЗадание(ЗаданиеВыгрузки.УникальныйИдентификатор);
	Возврат Истина;
КонецФункции
                                                       
&НаСервере
Функция ПроверитьЗаданияНаСервере()
	ОбратныеВызовыКлиента = Новый Массив();   
	Ответ = Новый Соответствие(); 

		Буфер = Новый Массив;  

	//Оставляем только для пользовтеля записи ...
	     
	СписокУдаления = Новый Массив;	                                          
	Для Индекс = 0  ПО  ПараметрыСеанса.ТестАсинхронность.Количество() - 1  Цикл  
		//Если Элемент.Пользователь = ПользователиИнформационнойБазы.ТекущийПользователь() Тогда  
			ЗаданиеВыгрузки = ФоновыеЗадания.НайтиПоУникальномуИдентификатору( ПараметрыСеанса.ТестАсинхронность[Индекс]["ИДЗадания"]);
			Если  ПроверитьАктивностьСостояние(ЗаданиеВыгрузки) <> Истина Тогда     
				ОбратныеВызовыКлиента.Добавить(ЗаданиеВыгрузки.Наименование);
			 	Продолжить;
			Иначе 
				Буфер.Добавить(ПараметрыСеанса.ТестАсинхронность[Индекс]);
			КонецЕсли;
	КонецЦикла; 


	 ПараметрыСеанса.ТестАсинхронность = Новый ФиксированныйМассив(Буфер); 
	
	Если Буфер.Количество() > 0 Тогда
		Ответ.Вставить("ОчередьНеПустая", Истина );
	Иначе 
		  Ответ.Вставить("ОчередьНеПустая", Ложь );             
	КонецЕсли; 
	Ответ.Вставить("ОбратныеВызовы",  ОбратныеВызовыКлиента);

	Возврат Ответ;
КонецФункции              

&НаКлиенте                                                
 Асинх Функция ПроверитьЗаданияНаКлиенте()   
	Ответ = ПроверитьЗаданияНаСервере();
	Для Каждого ОбратныйВызов Из Ответ.Получить("ОбратныеВызовы")  Цикл
		ПодключитьОбработчикОжидания(ОбратныйВызов, 0.1, Истина); 
		//Нужен неблокирующий вызов, так просто быстрее	
	КонецЦикла;
	
	Если	 Ответ.Получить("ОчередьНеПустая") = Истина Тогда
		ПодключитьОбработчикОжидания("ПроверитьЗаданияНаКлиенте", 0.5, Истина); 
	КонецЕсли; 
	
	ОбратныйВызов.Отчистить();
	
КонецФункции                    

&НаСервере
Функция ПроверитьАктивностьСостояние(ЗаданиеВыгрузки) 
	//ЗаданиеВыгрузки = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(IDЗадания);
	Если ЗаданиеВыгрузки.Состояние = СостояниеФоновогоЗадания.Активно Тогда   
		Возврат Истина;                                     
	КонецЕсли;         
	Возврат Ложь;
КонецФункции
     

